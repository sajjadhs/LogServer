@model IEnumerable<Data>
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Privacy Policy";
}
@section Scripts{

    <script>
        var dta = [];
        $(document).ready(function () {
            $.get("/home/data", function (data) {
                data.forEach(function (value, index) {
                    console.log(value);
                    var qq = JSON.parse(value.content);
                    qq.events.forEach(function (val, ind) {
                        dta.push(val);
                    });
                });
                $('#element').jsonViewer(dta);
            });
            var logLevel;
            var MachineName="";
            var Message = "";
            var Timestamp = "";
            $("#loglevel").on("change", function () {
                
                var val = $(this).val();
                logLevel = val;
                DoSearch();

            });
            $("#mn").on("input", function () {

                var val = $("#mn").val();
                MachineName = val;
                DoSearch();
            });
            $("#msg").on("input", function () {

                var val = $("#msg").val();
                Message = val;
                DoSearch();
            });
            $("#ts").on("input", function () {

                var val = $("#ts").val();
                Timestamp = val;
                DoSearch();
            });



            function DoSearch() {
                var vv = dta;
                if (logLevel !== undefined && logLevel !== "") {
                    console.log("log level " + logLevel);
                    vv = vv.filter(q => q.Level == logLevel);
                }
                if (MachineName !== null && MachineName !== "") {
                    console.log("mname "+MachineName);
                    vv = vv.filter(q => q.Properties.MachineName.toLowerCase().indexOf(MachineName.toLowerCase()) >= 0);
                }
                if (Message !== null && Message !== "") {
                    console.log("msg " + Message);
                    vv = vv.filter(q => q.RenderedMessage.toLowerCase().indexOf(Message.toLowerCase())>=0);
                }
                if (Timestamp !== null && Timestamp !== "") {
                    console.log("ts " + Timestamp);
                    vv = vv.filter(q => q.Timestamp.toLowerCase().indexOf(Timestamp.toLowerCase()) >= 0);
                }
                //Timestamp
                console.log(vv);
                $('#element').jsonViewer(vv);
            }
        });






    </script>


}
<h1>My Logs</h1>

<div class="row">
    <div class="col-sm-12">

        <div class="form-group">
            Log Level =
            <select id="loglevel">
                <option value="Information">Information</option>
                <option value="Error">Error</option>
                <option value="Warning">Warning</option>
            </select>
        </div>
        <div class="form-group">
            MachineName =
            <input id="mn" type="text" placeholder="type machine name" />
        </div>
        <div class="form-group">
            Message(contains) =
            <input id="msg" type="text" placeholder="type statement" />
        </div>
        <div class="form-group">
            TimeStamp(contains) =
            <input id="ts" type="text" placeholder="type timestamp" />
        </div>

    </div>
</div>

<div id="element"></div>

@*@foreach (var item in Model)
    {
        <div
        @Html.Raw(JsonConvert.SerializeObject(item, Formatting.Indented))

        <hr />
    }*@